#! /usr/bin/env bash

set -e

function checkWarnings {
	if [ -s /tmp/banana-errors ]; then
		>&2 echo "warnings were found in backup logs"
		rm -f /tmp/banana-errors
		exit 1
	fi

	rm -f /tmp/banana-errors
}

function generateMetadata {
	while read -r line; do
		key=$(echo "${line}" | sed -E 's/([a-zA-Z]*).*/\1/')
		value=$(echo "${line}" | sed -E 's/[^ ]* *(.*)/\1/')

		if [ ! -z ${key} ]; then local ${key}="${value}"; fi
	done

	> /tmp/metadata.json jq -n \
		--argjson size $(echo ${TotalDestinationSizeChange} | awk '{printf $1}') \
		'{ size: $size }'

	jq -n \
		--arg StartTime "${StartTime}" \
		--arg EndTime "${EndTime}" \
		--arg ElapsedTime "${ElapsedTime}" \
		--arg SourceFiles "${SourceFiles}" \
		--arg SourceFileSize "${SourceFileSize}" \
		--arg NewFiles "${NewFiles}" \
		--arg NewFileSize "${NewFileSize}" \
		--arg DeletedFiles "${DeletedFiles}" \
		--arg ChangedFiles "${ChangedFiles}" \
		--arg ChangedFileSize "${ChangedFileSize}" \
		--arg ChangedDeltaSize "${ChangedDeltaSize}" \
		--arg DeltaEntries "${DeltaEntries}" \
		--arg RawDeltaSize "${RawDeltaSize}" \
		--arg TotalDestinationSizeChange "${TotalDestinationSizeChange}" \
		--arg Errors "${Errors}" \
		'{
			StartTime: $StartTime,
			EndTime: $EndTime,
			ElapsedTime: $ElapsedTime,
			SourceFiles: $SourceFiles,
			SourceFileSize: $SourceFileSize,
			NewFiles: $NewFiles,
			NewFileSize: $NewFileSize,
			DeletedFiles: $DeletedFiles,
			ChangedFiles: $ChangedFiles,
			ChangedFileSize: $ChangedFileSize,
			ChangedDeltaSize: $ChangedDeltaSize,
			DeltaEntries: $DeltaEntries,
			RawDeltaSize: $RawDeltaSize,
			TotalDestinationSizeChange: $TotalDestinationSizeChange,
			Errors: $Errors,
		}'
}

case $1 in

version)
	echo v1.0.0
	;;

backup)
	duplicity $2 -v4 --log-fd 3 "${@:4}" $3 3> >(grep WARNING > /tmp/banana-errors) | >&2 tee >(generateMetadata | gzip > test.zip)
	checkWarnings
	;;

restore)
	>&2 duplicity -v4 --log-fd 3 --restore-time $2 $3 "${@:4}" 3> >(grep WARNING > /tmp/banana-errors)
	checkWarnings
	;;

esac
